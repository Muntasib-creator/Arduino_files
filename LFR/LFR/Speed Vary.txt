int sensor[]={4,7,8,10,11,12};
int motor[]={6,9,3,5};
int lfa,rfa;
const int trigPin = 1;
const int echoPin = 0;
long duration;
int distance;

void setup() {
  // put your setup code here, to run once:
  for(int i=0;i<6;i++){
    pinMode(sensor[i],INPUT);
  }
  for(int i=0;i<4;i++){
    pinMode(motor[i],OUTPUT);
  }
  Serial.begin(9600);

}

void loop() {
digitalWrite(trigPin, LOW);
delayMicroseconds(2);
// Sets the trigPin on HIGH state for 10 micro seconds
digitalWrite(trigPin, HIGH);
delayMicroseconds(10);
digitalWrite(trigPin, LOW);
// Reads the echoPin, returns the sound wave travel time in microseconds
duration = pulseIn(echoPin, HIGH);
// Calculating the distance
distance= duration*0.034/2;
// Prints the distance on the Serial Monitor
Serial.print("Distance: ");
Serial.println(distance);


  
  /* put your main code here, to run repeatedly:
  
  lfa=digitalRead(sensor[0])+digitalRead(sensor[1])+digitalRead(sensor[2]);
  rfa=digitalRead(sensor[3])+digitalRead(sensor[4])+digitalRead(sensor[5]);
  
 Serial.print(lfa);
  Serial.print("\t");
  Serial.println(rfa);
  
 /* if((rfa==1 && lfa==1)){
    analogWrite(motor[0],200);
    analogWrite(motor[1],0);
    analogWrite(motor[2],200);
    analogWrite(motor[3],0);
  }/*
  if(rfa==lfa){
    analogWrite(motor[0],150);
    analogWrite(motor[1],0);
    analogWrite(motor[2],150);
    analogWrite(motor[3],0);
  }*/
 /* else if(rfa>lfa){
    analogWrite(motor[0],250);
    analogWrite(motor[1],0);
    analogWrite(motor[2],0);
    analogWrite(motor[3],0);
  }
  else if(rfa<lfa){
    analogWrite(motor[0],0);
    analogWrite(motor[1],0);
    analogWrite(motor[2],250);
    analogWrite(motor[3],0);
  }
  else if(lfa<=1 && rfa>=2){
    analogWrite(motor[0],0);
    analogWrite(motor[1],0);
    analogWrite(motor[2],250);
    analogWrite(motor[3],0);
  }
  else if(lfa==3 && rfa==3){
    analogWrite(motor[0],0);
    analogWrite(motor[1],0);
    analogWrite(motor[2],0);
    analogWrite(motor[3],0);
  }
  else {
    analogWrite(motor[0],250);
    analogWrite(motor[1],0);
    analogWrite(motor[2],0);
    analogWrite(motor[3],0);
  }
  else{
    analogWrite(motor[0],150);
    analogWrite(motor[1],0);
    analogWrite(motor[2],150);
    analogWrite(motor[3],0);
  }*/

  if(distance<=17){
   int speedone=0;
   int increase=1;
   int speedtwo=100;
   int decrease=1;
    analogWrite(motor[0],speedone);
    if (speedone<=100)
    {speedone=speedone+increase;}
    else {return 0;}
    delay(200);
    analogWrite(motor[1],0);
    analogWrite(motor[2],speedtwo);
    if (speedtwo>=0)
  {speedtwo=speedtwo-decrease;}
  else {return 0;}
    delay(200);
    analogWrite(motor[3],0);
    
    
    
}    

    else {
    analogWrite(motor[0],100);
    analogWrite(motor[1],0);
    analogWrite(motor[2],100);
    analogWrite(motor[3],0); 
      }
  }






  